#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ Telegram API
"""
import os
import sys
import asyncio
import aiohttp
from pathlib import Path

async def clear_telegram_api():
    """–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ—Ç Telegram API –æ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤"""
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞")
        return False
    
    print("üßπ –û—á–∏—Å—Ç–∫–∞ Telegram API...")
    
    async with aiohttp.ClientSession() as session:
        # 1. –£–¥–∞–ª—è–µ–º webhook
        webhook_url = f"https://api.telegram.org/bot{bot_token}/deleteWebhook"
        params = {"drop_pending_updates": True}
        
        async with session.post(webhook_url, params=params) as resp:
            result = await resp.json()
            print(f"üì° Webhook —É–¥–∞–ª–µ–Ω: {'‚úÖ' if result.get('ok') else '‚ùå'}")
        
        # 2. –û—á–∏—â–∞–µ–º –≤—Å–µ pending updates
        updates_url = f"https://api.telegram.org/bot{bot_token}/getUpdates"
        params = {"offset": -1, "limit": 1}
        
        async with session.post(updates_url, params=params) as resp:
            result = await resp.json()
            if result.get('ok') and result.get('result'):
                last_update_id = result['result'][0]['update_id']
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤—Å–µ updates
                params = {"offset": last_update_id + 1}
                async with session.post(updates_url, params=params) as resp2:
                    print("üóëÔ∏è Pending updates –æ—á–∏—â–µ–Ω—ã")
        
        print("‚úÖ Telegram API –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω")
        return True

if __name__ == "__main__":
    asyncio.run(clear_telegram_api())
