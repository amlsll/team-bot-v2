"""
–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞–∑–∞–¥".
"""

from typing import List, Optional
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


class NavigationService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."""
    
    @staticmethod
    def add_back_button(
        buttons: List[List[InlineKeyboardButton]], 
        back_callback: str = "go_back"
    ) -> List[List[InlineKeyboardButton]]:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥' –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫."""
        result = buttons.copy()
        result.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=back_callback)])
        return result
    
    @staticmethod
    def create_keyboard_with_back(
        buttons: List[List[InlineKeyboardButton]], 
        back_callback: str = "go_back"
    ) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'."""
        buttons_with_back = NavigationService.add_back_button(buttons, back_callback)
        return InlineKeyboardMarkup(inline_keyboard=buttons_with_back)
    
    @staticmethod
    def create_simple_keyboard_with_back(
        text_callback_pairs: List[tuple], 
        back_callback: str = "go_back"
    ) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –ø–∞—Ä (—Ç–µ–∫—Å—Ç, callback) —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'."""
        buttons = []
        for text, callback in text_callback_pairs:
            buttons.append([InlineKeyboardButton(text=text, callback_data=callback)])
        
        return NavigationService.create_keyboard_with_back(buttons, back_callback)


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
nav = NavigationService()
