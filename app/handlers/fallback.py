"""
Fallback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
"""

from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from ..services.logger import get_logger

logger = get_logger('fallback')
router = Router()


@router.message(F.text.startswith('/'))
async def handle_unknown_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å /)."""
    if not message.from_user:
        return
    
    logger.info(f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç {message.from_user.id}: {message.text}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Å–∫–∞–∑–∫—É
    help_text = """–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã:
    
üöÄ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
üìä /status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å  
‚ùå /leave - –ü–æ–∫–∏–Ω—É—Ç—å –æ—á–µ—Ä–µ–¥—å –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É

–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."""

    await message.reply(help_text)
