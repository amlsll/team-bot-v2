#!/usr/bin/env python3
"""
–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –¥–ª—è Replit.
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç webhook —Ä–µ–∂–∏–º –¥–ª—è Cloud Run –¥–µ–ø–ª–æ—è.
"""

import os
import sys
import asyncio
import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler(sys.stdout)]
)

logger = logging.getLogger(__name__)


def setup_replit_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Replit."""
    logger.info("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Replit...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    bot_token = os.getenv('BOT_TOKEN')
    admin_code = os.getenv('ADMIN_CODE')
    
    if not bot_token:
        logger.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        logger.error("üí° –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ Secrets (üîí –∏–∫–æ–Ω–∫–∞ —Å–ª–µ–≤–∞)")
        sys.exit(1)
    
    if not admin_code:
        logger.error("‚ùå ADMIN_CODE –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è") 
        logger.error("üí° –î–æ–±–∞–≤—å—Ç–µ ADMIN_CODE –≤ Secrets (üîí –∏–∫–æ–Ω–∫–∞ —Å–ª–µ–≤–∞)")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ WEBHOOK_URL
    existing_webhook = os.getenv('WEBHOOK_URL')
    
    if existing_webhook:
        logger.info(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π WEBHOOK_URL: {existing_webhook}")
        webhook_url = existing_webhook
    else:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º webhook URL –Ω–∞ –æ—Å–Ω–æ–≤–µ Replit –¥–æ–º–µ–Ω–∞
        replit_domain = os.getenv('REPLIT_DEV_DOMAIN')
        repl_slug = os.getenv('REPL_SLUG', 'team-bot-v2')
        repl_owner = os.getenv('REPL_OWNER', 'user')
        
        if replit_domain:
            webhook_url = f"https://{replit_domain}"
            logger.info(f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω Webhook URL: {webhook_url}")
        else:
            # –§–æ—Ä–º–∏—Ä—É–µ–º webhook URL –¥–ª—è Replit
            webhook_url = f"https://{repl_slug}.{repl_owner}.repl.co"
            logger.info(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Webhook URL: {webhook_url}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è webhook —Ä–µ–∂–∏–º–∞
    os.environ['USE_WEBHOOK'] = 'true'
    os.environ['WEBHOOK_URL'] = webhook_url
    os.environ['PORT'] = '3000'
    
    logger.info(f"‚úÖ –†–µ–∂–∏–º: webhook")
    logger.info(f"‚úÖ Port: 3000")
    
    return webhook_url

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –¥–ª—è Replit."""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ team-bot –¥–ª—è Replit...")
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è Replit
        webhook_url = setup_replit_environment()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
        from app.__main__ import main as app_main
        
        logger.info("‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
        await app_main()
        
    except KeyboardInterrupt:
        logger.info("üî¥ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
        return 0
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return 1


if __name__ == '__main__':
    exit_code = asyncio.run(main())
    sys.exit(exit_code)